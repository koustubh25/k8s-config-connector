apiVersion: composition.google.com/v1alpha1
kind: Composition
metadata:
  name: appteams
  namespace: default
spec:
  inputAPIGroup: appteams.cloudfoundations.anz.com
  namespaceMode: explicit
  expanders:
  - type: jinja2
    name: iamsa
    version: v0.0.1
    template: |
      {% set managedProject = appteams.spec.project %}
      {% set namespace = appteams.spec.namespace %}
      apiVersion: iam.cnrm.cloud.google.com/v1beta1
      kind: IAMServiceAccount
      metadata:
        labels:
          label-one: "composition-test"
        name: cf-compos-test
        namespace: {{ namespace }}
      spec:
        displayName: Test SA for Composition testing
  - type: jinja2
    name: bucket
    version: v0.0.1
    template: |
      {% set managedProject = appteams.spec.project %}
      {% set namespace = appteams.spec.namespace %}
      apiVersion: storage.cnrm.cloud.google.com/v1beta1
      kind: StorageBucket
      metadata:
        name: composition-test-{{ managedProject }}
        namespace: {{ namespace }}
        annotations:
          cnrm.cloud.google.com/project-id: {{ managedProject }}
      spec:
        location: australia-southeast1
        storageClass: standard
        uniformBucketLevelAccess: true
        versioning:
          enabled: false
      ---
      {% set managedProject = appteams.spec.project %}
      {% set namespace = appteams.spec.namespace %}
      apiVersion: iam.cnrm.cloud.google.com/v1beta1
      kind: IAMPolicyMember
      metadata:
        name: compos-iampolicymember
        namespace: {{ namespace }}
      spec:
        member: serviceAccount:cf-compos-test@{{ managedProject }}.iam.gserviceaccount.com
        role: roles/storage.objectViewer
        resourceRef:
          kind: StorageBucket
          name: composition-test-{{ managedProject }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.13.0
  name: appteams.cloudfoundations.anz.com
spec:
  group: cloudfoundations.anz.com
  names:
    kind: AppTeam
    listKind: AppTeamList
    plural: appteams
    singular: appteam
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: AppTeam is the Schema for the appteams API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppTeamSpec defines the desired state of AppTeam
            properties:
              project:
                type: string
              namespace:
                type: string
            required:
            - project
            - namespace
            type: object
          status:
            description: AppTeamStatus defines the observed state of AppTeam
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}